package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"
	"fmt"
	"student-laboratory-matching-app/graph/model"
)

// University is the resolver for the university field.
func (r *laboratoryResolver) University(ctx context.Context, obj *model.Laboratory) (*model.University, error) {
	return r.Srv.GetUniversityById(obj.University.ID)
}

// Majors is the resolver for the majors field.
func (r *laboratoryResolver) Majors(ctx context.Context, obj *model.Laboratory) ([]*model.Major, error) {
	return r.Srv.GetMajorByLaboratory(obj.ID)
}

// CreateStudent is the resolver for the createStudent field.
func (r *mutationResolver) CreateStudent(ctx context.Context, input model.NewStudent) (*model.Student, error) {
	panic(fmt.Errorf("not implemented: CreateStudent - createStudent"))
}

// Student is the resolver for the student field.
func (r *queryResolver) Student(ctx context.Context, id string) (*model.Student, error) {
	return r.Srv.GetStudentById(id)
}

// Laboratory is the resolver for the laboratory field.
func (r *queryResolver) Laboratory(ctx context.Context, id string) (*model.Laboratory, error) {
	return r.Srv.GetLaboratoryById(id)
}

// University is the resolver for the university field.
func (r *studentResolver) University(ctx context.Context, obj *model.Student) (*model.University, error) {
	return r.Srv.GetUniversityById(obj.University.ID)
}

// Prefecture is the resolver for the prefecture field.
func (r *studentResolver) Prefecture(ctx context.Context, obj *model.Student) (*model.Prefecture, error) {
	return r.Srv.GetPrefectureById(obj.Prefecture.ID)
}

// Majors is the resolver for the majors field.
func (r *studentResolver) Majors(ctx context.Context, obj *model.Student) ([]*model.Major, error) {
	return r.Srv.GetMajorByStudent(obj.ID)
}

// Prefecture is the resolver for the prefecture field.
func (r *universityResolver) Prefecture(ctx context.Context, obj *model.University) (*model.Prefecture, error) {
	return r.Srv.GetPrefectureById(obj.Prefecture.ID)
}

// Laboratory returns LaboratoryResolver implementation.
func (r *Resolver) Laboratory() LaboratoryResolver { return &laboratoryResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Student returns StudentResolver implementation.
func (r *Resolver) Student() StudentResolver { return &studentResolver{r} }

// University returns UniversityResolver implementation.
func (r *Resolver) University() UniversityResolver { return &universityResolver{r} }

type laboratoryResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type studentResolver struct{ *Resolver }
type universityResolver struct{ *Resolver }
