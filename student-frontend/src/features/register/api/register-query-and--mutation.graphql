scalar Time

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum MatchStatus {
  ACTIVE
  INACTIVE
}

input NewStudentFields {
	id: ID!
	name: String
	email: String
	password: String
	imageUrl: String
	gender: Gender
	universityId: ID
	grade: Int
	gpa: Float
	prefectureId: ID
	comment: String
	interest: String
	status: MatchStatus
	majorIds: [ID]
}

type Major {
  id: ID!
  name: String!
}

type Prefecture {
  id: ID!
  name: String!
}

type University {
  id: ID!
  prefecture: Prefecture!
  name: String!
  address: String!
  maxGpa: Float!
}

input NewStudentFields {
	id: ID!
	name: String
	email: String
	password: String
	imageUrl: String
	gender: Gender
	universityId: ID
	grade: Int
	gpa: Float
	prefectureId: ID
	comment: String
	interest: String
	status: MatchStatus
	majorIds: [ID]
}



query getAllPrefectures{
  getAllPrefectures{
      id
      name
  }
}

query getAllUniversities{
  getAllUniversities{
      id
      name
  }
}

query getAllMajors{
  getAllMajors{
      id
      name
  }
}

mutation updateStudent($input: NewStudentFields!){
    updateStudent(input: $input){
        id
    }
}